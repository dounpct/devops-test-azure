name: Build and Deploy to Azure Container Registry

on:
  push:
    branches:
      - master
    tags:
      - "*"
    paths-ignore:
      - ".github/workflows/*" # Exclude changes to workflow files
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Redirect logs to a file
      run: |
        exec > >(tee -a $GITHUB_WORKSPACE/workflow.log) 2>&1
    
    - name: Set LINE_TOKEN environment variable
      run: echo "LINE_TOKEN=${{ secrets.LINE_TOKEN }}" >> $GITHUB_ENV

    - name: Clone shared repository
      run: |
        git clone https://github.com/dounpct/devops-action-azure-share-lib2.git shared-repo
        cd shared-repo
        ls -la # Verify the contents
      env:
        GIT_USER: ${{ secrets.GIT_USER }}
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

    - name: Run LINE Notification Script
      run: |
        cd shared-repo
        bash startup.bash

    - name: Set IMAGE_TAG
      id: image_tag
      run: |
        if [[ "${{ github.ref }}" == refs/heads/master ]]; then
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
          SHORT_SHA=$(git rev-parse --short=5 HEAD)
          echo "IMAGE_TAG=${{ secrets.AZURE_CONTAINER_REGISTRY }}/devops-test-azure:${TIMESTAMP}-${SHORT_SHA}" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
          TAG_NAME=${{ github.ref_name }}
          echo "IMAGE_TAG=${{ secrets.AZURE_CONTAINER_REGISTRY }}/devops-test-azure:${TAG_NAME}" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.AZURE_CLIENT_ID }}
        password: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.IMAGE_TAG }} .
        # docker push ${{ env.IMAGE_TAG }}

    - name: Run Finish LINE Notification Script
      run: |
        cd shared-repo
        bash finish.bash

    - name: Send message to Power Automate on failure
      if: failure()  # This condition ensures the step runs only if the previous steps failed
      env:
        WEBHOOK_URL: ${{ secrets.POWER_AUTOMATE_WEBHOOK_URL }}
      run: |
        ERROR_MESSAGE="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID \n ${{job.status}}"
        curl -X POST "$WEBHOOK_URL" \
          -H "Content-Type: application/json" \
          -d '{
                "type": "message",
                "attachments": [
                  {
                    "contentType": "application/vnd.microsoft.card.adaptive",
                    "contentUrl": null,
                    "content": {
                      "type": "AdaptiveCard",
                      "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                      "version": "1.3",
                      "body": [
                        {
                          "type": "TextBlock",
                          "text": "Pipeline failed: '"${ERROR_MESSAGE}"'",
                          "wrap": true,
                          "color": "Accent",
                          "size": "ExtraLarge"
                        }
                      ]
                    }
                  }
                ]
              }'
      shell: bash
