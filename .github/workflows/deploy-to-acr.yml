name: Build and Deploy to Azure Container Registry

on:
  push:
    branches:
      - master
    tags:
      - "*"
    paths-ignore:
      - ".github/workflows/*" # Exclude changes to workflow files
  workflow_dispatch:
    inputs:
      tag:
        description: "The Docker image tag to use (e.g., 0.0.1)"
        required: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set LINE_TOKEN environment variable
      run: echo "LINE_TOKEN=${{ secrets.LINE_TOKEN }}" >> $GITHUB_ENV

    - name: Clone shared repository
      run: |
        git clone https://github.com/dounpct/devops-action-azure-share-lib.git shared-repo
        cd shared-repo
        ls -la # Verify the contents
      env:
        GIT_USER: ${{ secrets.GIT_USER }}
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

    - name: Run LINE Notification Script
      run: |
        cd shared-repo
        bash startup.bash

    - name: Set IMAGE_TAG
      id: image_tag
      run: |
        if [[ "${{ github.ref }}" == refs/heads/master ]]; then
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
          SHORT_SHA=$(git rev-parse --short=5 HEAD)
          echo "IMAGE_TAG=${{ secrets.AZURE_CONTAINER_REGISTRY }}/devops-test-azure:${TIMESTAMP}-${SHORT_SHA}" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
          TAG_NAME=${{ github.ref_name }}
          echo "IMAGE_TAG=${{ secrets.AZURE_CONTAINER_REGISTRY }}/devops-test-azure:${TAG_NAME}" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.AZURE_CLIENT_ID }}
        password: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.IMAGE_TAG }} .
        # docker push ${{ env.IMAGE_TAG }}

    - name: Run Finish LINE Notification Script
      run: |
        cd shared-repo
        bash finish.bash
